name: Bundle Super Images to Zip

on:
    workflow_dispatch:
        inputs:
            LINK_TAR:
                description: 'Link to the Super.img in TAR'
                required: false
            LINK_XZ:
                description: 'Link to the Super.img in TAR.XZ'
                required: false
            LINK:
                description: 'Link to the Super.img file only'
                required: false
            LINK_README:
                description: Enter the readme link of said page (leave if there's no readme)
                required: false
            COMPRESSION_LEVEL:
                description: Level of Compression (RECOMMENDED IS DEFAULT)
                required: true
                default: 'default'
                type: choice
                options:
                    - 'default'
                    - 'store'
                    - 'less'
                    - 'intense'
            NAME_REL:
                description: 'Enter name for Github Release (and for the zip)'
                required: true

jobs:
    Packing-up:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:

            - name: Display Session Parameters, for Debugging
              run: |
                echo "Debug:"
                echo "Link (tar): ${{github.event.inputs.LINK}}"
                echo "Compression Level: ${{github.event.inputs.COMPRESSION_LEVEL}}"
                echo "NAME_REL: ${{github.event.inputs.NAME_REL}}"
            - name: Check out
              uses: actions/checkout@v3
            - name: Clean Bloated Environment
              uses: rokibhasansagar/slimhub_actions@main
              with: 
                retain: "docker_imgcache,docker_buildkit,container_tools,nodejs_npm,toolcache_node"
            - name: Prepare everything
              run: |
                sudo apt update
                sudo apt upgrade -y
                sudo apt install unzip aria2 zip
                realpath . > dir.txt
            - name: Fetch Files - TAR
              if: |
                github.event.inputs.LINK_TAR != null && github.event.inputs.LINK_XZ == null && github.event.inputs.LINK == null
              run: |
                aria2c "${{github.event.inputs.LINK}}" -o "target.tar"
                tar -xf target.tar
                pwd > dir
            - name: Fetch Files - XZ
              if: |
                github.event.inputs.LINK_TAR == null && github.event.inputs.LINK_XZ != null && github.event.inputs.LINK == null
              run: |
                aria2c "${{github.event.inputs.LINK}}" -o "target.tar.xz"
                tar -xf target.tar.xz
                pwd > dir
            - name: Fetch Files - img
              if: |
                github.event.inputs.LINK_TAR == null && github.event.inputs.LINK_XZ == null && github.event.inputs.LINK != null
              run: |
                aria2c "${{github.event.inputs.LINK}}" -o "target.img"
                pwd > dir
            - name: Grabbing the images
              run: |
                if [ -e "image_build" ]; then 
                  mv image_build/super.img "$(pwd)/super.img"
                elif [ -e "home" ]; then
                  echo "Fk it im not going to index that shi"
                  exit 1
                elif [ -e "super.img" ]; then
                  echo "No actions needed"
                else
                  echo "Where's the file, said Mizu Calmly"
                  exit 1
                fi
            - name: Bundle up
              continue-on-error: true
              run: |
                if [ ! -z "${{github.event.inputs.LINK_README}}" ]; then
                  curl "${{github.event.inputs.LINK_README}}" > notes-rm
                fi
                git clone https://github.com/MizProject/AnySuper AS
                mv AS/components "$(pwd)"
                if [ ! -e "notes-rm" ]; then
                  cat << EOF > notes-rm
                This is autogenerated by bundle.yml
                ===========================
                Thank you for using AnySuper
                by Mizumo-prjkt under the organization MizProject
                Special thanks to osm0sis (based on AnyKernel Concept and some code) and Chainfire
                ===========================
                Name: ${{github.event.inputs.NAME_REL}}
                Run ID: ${{github.run_id}}
                ===========================
                There were no readme was injected so this autogen was replaced instead
                ===========================
                EOF
                else
                  echo "OK, file found"
                fi
                rm -rf components/notes
                mv notes-rm components/notes
                mv super.img components/super.img
                cd components
                if [ "${{github.event.inputs.COMPRESSION_LEVEL}}" == "default" ]; then
                  zip -r AnySuper.zip
                  mv AnySuper.zip ../${{github.event.inputs.NAME_REL}}.zip
                elif [ "${{github.event.inputs.COMPRESSION_LEVEL}}" == "store" ]; then
                  zip -0r AnySuper.zip
                  mv AnySuper.zip ../${{github.event.inputs.NAME_REL}}.zip
                elif [ "${{github.event.inputs.COMPRESSION_LEVEL}}" == "less" ]; then
                  zip -1r AnySuper.zip
                  mv AnySuper.zip ../${{github.event.inputs.NAME_REL}}.zip
                elif [ "${{github.event.inputs.COMPRESSION_LEVEL}}" == "intense" ]; then
                  zip -9r AnySuper.zip
                  mv AnySuper.zip ../${{github.event.inputs.NAME_REL}}.zip
                else
                  echo "Hidden message :O WOW, SO GOOD! Also how did you get here?"
                  zip -r AnySuper.zip
                  mv AnySuper.zip ../${{github.event.inputs.NAME_REL}}.zip
                fi
                cd ..
                mkdir outploy # For deployment using sftp by pressidium/lftp-mirror-action@v1
                mv ${{github.event.inputs.NAME_REL}}.zip outploy/
            - name: Deploy to GH Release
              uses: softprops/action-gh-release@v2
              continue-on-error: true
              with:
                files: |
                  outploy/*
                name: ${{github.event.inputs.NAME_REL}} - ${{github.run_id}}
                tag_name: ${{github.run_id}}
                body: |
                  File used: ${{github.event.inputs.LINK}}
                             ${{github.event.inputs.LINK_TAR}}
                             ${{github.event.inputs.LINK_XZ}}
                  Is notes autogenerated?
                    Result: " [ ${{github.event.inputs.LINK_README}} ] "
                    if the Result is blank means its autogenerated
                  Note: If there's nothing here, visit the SFTP Hosting website set by the repo maintainer:
                    ${{secrets.SFTP_WEBPROJECT}}
                    if that's also empty then means this is private or please contact the repo owner
              env: 
                GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
            - name: Deploy to SFTP server
              uses: pressidium/lftp-mirror-action@v1
              with:
                host: ${{secrets.SFTP_HOSTNAME}}
                port: ${{secrets.SFTP_PORT}}
                user: ${{secrets.SFTP_USERNAME}}
                pass: '${{secrets.SFTP_PASSWORD}}'
                localDir: './outploy'
                remoteDir: '${{secrets.SFTP_TARGET}}'

